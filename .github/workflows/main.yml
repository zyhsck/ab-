name: Generate Watch Face
on:
  workflow_dispatch:
    inputs:
      input_json:
        description: 'JSON containing model path and image Base64'
        required: true

jobs:
  generate:
    runs-on: windows-latest
    permissions:
      contents: write
      
    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 解析JSON输入
      - name: Parse JSON input
        id: parse-json
        run: |
          $jsonInput = '${{ github.event.inputs.input_json }}' | ConvertFrom-Json
          echo "fprj_path=$($jsonInput.model)" >> $env:GITHUB_OUTPUT
          echo "image_base64=$($jsonInput.file)" >> $env:GITHUB_OUTPUT
          echo "project_dir=$(Split-Path -Path $($jsonInput.model) -Parent)" >> $env:GITHUB_OUTPUT

      # 3. 准备项目目录
      - name: Prepare project directory
        run: |
          $projectDir = "project"
          New-Item -ItemType Directory -Path $projectDir -Force
          $sourceDir = "${{ steps.parse-json.outputs.project_dir }}"
          Copy-Item -Path "$sourceDir\*" -Destination $projectDir -Recurse -Force
          $fprjFile = Split-Path -Path "${{ steps.parse-json.outputs.fprj_path }}" -Leaf
          Rename-Item -Path "$projectDir\$fprjFile" -NewName "fprj.fprj" -Force
          echo "project_dir=$projectDir" >> $env:GITHUB_OUTPUT

      # 4. 替换图片
      - name: Replace image
        run: |
          $projectDir = "${{ steps.parse-json.outputs.project_dir }}"
          $imageDir = "$projectDir\images"
          New-Item -ItemType Directory -Path $imageDir -Force -ErrorAction SilentlyContinue
          $bytes = [Convert]::FromBase64String('${{ steps.parse-json.outputs.image_base64 }}')
          [IO.File]::WriteAllBytes("$imageDir\pic.png", $bytes)

      # 5. 运行编译脚本
      - name: Run Python script
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        run: |
          python compile_watchface.py

      # 6. 创建Release并上传.face文件
      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: "face-${{ github.run_id }}"
          files: output/*.face
          draft: false
          prerelease: false

      # 7. 输出下载链接
      - name: Output Release URL
        run: |
          $outputFile = Get-ChildItem -Path "output" -Filter "*.face" | Select-Object -First 1
          $downloadUrl = "https://github.com/${{ github.repository }}/releases/download/face-${{ github.run_id }}/$($outputFile.Name)"
          echo "::set-output name=download_url::$downloadUrl"
        id: set-url
      
    outputs:
      download_url: ${{ steps.set-url.outputs.download_url }}
