name: Find FPRJ Files
on:
  workflow_dispatch:
  repository_dispatch:
    types: [find-fprj-request]

jobs:
  find-fprj:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.set-output.outputs.result }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Find .fprj files
        run: |
          # 递归查找所有.fprj文件
          find . -type f -name "*.fprj" > file_list.txt
          
          # 创建JSON数组
          jq -R -s 'split("\n") | map(select(. != ""))' file_list.txt > fprj_files.json
          
          # 打印文件数量
          file_count=$(jq -r 'length' fprj_files.json)
          echo "Found $file_count .fprj files"

      - name: Prepare JSON result
        run: |
          # 创建完整的响应JSON
          jq -n \
            --arg run_id "$GITHUB_RUN_ID" \
            --arg timestamp "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
            --slurpfile files fprj_files.json \
            '{
              status: "success",
              run_id: $run_id,
              timestamp: $timestamp,
              file_count: ($files[0] | length),
              files: $files[0]
            }' > result.json
          
          # 打印结果便于调试
          echo "Generated JSON:"
          cat result.json

      - name: Set JSON output
        id: set-output
        run: |
          # 读取JSON内容并压缩为单行
          result=$(jq -c . result.json)
          
          # 设置输出（正确转义特殊字符）
          result="${result//$'\n'/}"
          result="${result//$'\r'/}"
          echo "result=$result" >> $GITHUB_OUTPUT
          echo "JSON输出已设置"

      - name: Upload result as artifact
        uses: actions/upload-artifact@v4
        with:
          name: fprj-results
          path: result.json
          retention-days: 1

      - name: Return results via API
        if: ${{ secrets.RESULT_API_URL != '' }}
        run: |
          API_URL="${{ secrets.RESULT_API_URL }}"
          
          # 发送JSON结果
          curl -X POST "$API_URL" \
            -H "Content-Type: application/json" \
            --data-binary "@result.json"
