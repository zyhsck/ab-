name: Find FPRJ Files
on:
  workflow_dispatch:
  repository_dispatch:
    types: [find-fprj-request]

jobs:
  find-fprj:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Find .fprj files
        run: |
          # 递归查找所有.fprj文件并保存为JSON数组
          find . -type f -name "*.fprj" > file_list.txt
          jq -R -s 'split("\n") | map(select(. != ""))' file_list.txt > fprj_files.json
          echo "Found $(jq -r 'length' fprj_files.json) .fprj files"

      - name: Prepare JSON response
        run: |
          # 创建完整的响应JSON
          jq -n \
            --arg run_id "$GITHUB_RUN_ID" \
            --arg timestamp "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
            --slurpfile files fprj_files.json \
            '{
              status: "success",
              run_id: $run_id,
              timestamp: $timestamp,
              file_count: ($files[0] | length),
              files: $files[0]
            }' > response.json
          
          # 打印结果便于调试
          echo "Generated response:"
          jq . response.json

      - name: Send results
        run: |
          # 检查secret是否设置
          if [[ "$RESULT_API_URL" != "" ]]; then
            echo "Sending to API endpoint: $RESULT_API_URL"
            curl -X POST "$RESULT_API_URL" \
              -H "Content-Type: application/json" \
              --data-binary "@response.json"
          else
            echo "::warning::RESULT_API_URL secret not set."
            echo "Generated response:"
            cat response.json
            echo "::set-output name=result::$(cat response.json)"
          fi
        env:
          RESULT_API_URL: ${{ secrets.RESULT_API_URL }}
          
      - name: Output result for manual use
        if: ${{ always() }}
        run: |
          echo "Final result:"
          cat response.json
